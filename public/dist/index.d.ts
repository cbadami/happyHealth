import '../css/simple-notify.scss';
declare type notifyType = 1 | 2 | 3;
declare type notifyStatus = 'success' | 'warning' | 'error';
declare type notifyEffect = 'fade' | 'slide';
declare type notifyPosition = 'left top' | 'top left' | 'right top' | 'top right' | 'left bottom' | 'bottom left' | 'right bottom' | 'bottom right' | 'center' | 'left y-center' | 'right y-center' | 'y-center left' | 'y-center right' | 'top x-center' | 'bottom x-center' | 'x-center top' | 'x-center bottom';
interface IArgs {
    status?: notifyStatus;
    type?: notifyType;
    effect?: notifyEffect;
    position?: notifyPosition;
    title?: string;
    text?: string;
    showIcon?: Boolean;
    customIcon?: string;
    showCloseButton?: Boolean;
    customClass?: string;
    speed?: number;
    autoclose?: Boolean;
    autotimeout?: number;
    gap?: number;
    distance?: number;
}
export default class Notify {
    wrapper: HTMLElement;
    container: HTMLElement;
    status: notifyStatus;
    type: notifyType;
    effect: notifyEffect;
    position: notifyPosition;
    title: string;
    text: string;
    showIcon: Boolean;
    customIcon: string;
    showCloseButton: Boolean;
    customClass: string;
    speed: number;
    autoclose: Boolean;
    autotimeout: number;
    gap: number;
    distance: number;
    selectedNotifyInEffect: Function;
    selectedNotifyOutEffect: Function;
    constructor(args: IArgs);
    private checkRequirements;
    private setContainer;
    private setPosition;
    private setCloseButton;
    private setWrapper;
    private setContent;
    private setIcon;
    private setObserver;
    private notifyIn;
    private notifyOut;
    private autoClose;
    close(): void;
    private setEffect;
    private fadeIn;
    private fadeOut;
    private slideIn;
    private slideOut;
}
export {};
